import*as THREE from"./three.module.min.js";import{OrbitControls}from"./OrbitControls.js";import TWEEN from"./tween.module.js";const w1600=window.matchMedia("(min-width: 1600px)"),w1300=window.matchMedia("(min-width: 1300px)"),w768=window.matchMedia("(min-width: 768px)"),w576=window.matchMedia("(min-width: 576px)"),ANGLES_NUM=5,FIGURE_HEIGHT=w768.matches?5.5:w576.matches?13:16,FIGURE_RADIUS=w768.matches?5:w576.matches?4:3,CURV_COEF=w768.matches?2:1.3,LINES_COLOR="#ffffff",SPHERE_COLORS=["#29b579","#fa6727","#f8104b","#1d7372","#00a6b4","#1d7372","#c0392b","#2c92e5","#2dcc70","#7cbb3b"],parent=document.querySelector(".canvas__window"),tabs=document.querySelectorAll(".graphic__tab"),scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3);w1600.matches?camera.position.set(-.19058996153741722,-8.456740289133542,1.5396789741867494):w1300.matches?camera.position.set(-.19058996153741642,-11.157212056000972,2.783018838956491):camera.position.set(-.1905899615374156,-18.100924888631944,5.980013927091829),camera.aspect=parent.offsetWidth/parent.offsetWidth;const renderer=new THREE.WebGLRenderer({antialias:!0});w576.matches?renderer.setSize(parent.offsetWidth,parent.offsetWidth):renderer.setSize(parent.offsetWidth,parent.offsetHeight),renderer.setClearColor(4210509,0),parent.appendChild(renderer.domElement);const controls=new OrbitControls(camera,renderer.domElement);controls.target.set(-.19058996153741756,-4.083425180755162,-.473864393368694),controls.update(),controls.addEventListener("change",()=>{console.log("controls.target"),console.log(controls.target),console.log("camera.position"),console.log(camera.position)});const materialLine=new THREE.LineBasicMaterial({color:"#ffffff"}),polygonCoords1=[];for(let e=0;e<=5;e++){const t=2*e*Math.PI/5;polygonCoords1.push(new THREE.Vector3(1===e||4===e?Math.sin(t)*FIGURE_RADIUS*CURV_COEF:Math.sin(t)*FIGURE_RADIUS,-Math.cos(t)*FIGURE_RADIUS,0))}const geometry1=(new THREE.BufferGeometry).setFromPoints(polygonCoords1),polygon1=new THREE.Line(geometry1,materialLine);polygon1.rotateX(-Math.PI),scene.add(polygon1);const polygonCoords2=[];for(let e=0;e<=5;e++){const t=2*e*Math.PI/5;polygonCoords2.push(new THREE.Vector3(1===e||4===e?Math.sin(t)*FIGURE_RADIUS*CURV_COEF:Math.sin(t)*FIGURE_RADIUS,-Math.cos(t)*FIGURE_RADIUS,FIGURE_HEIGHT))}const geometry2=(new THREE.BufferGeometry).setFromPoints(polygonCoords2),polygon2=new THREE.Line(geometry2,materialLine);polygon2.rotateX(-Math.PI),scene.add(polygon2);for(let e=0;e<5;e++){const t=[];for(let n=0;n<10;n++){const n=2*e*Math.PI/5;t.push([new THREE.Vector3(1===e||4===e?Math.sin(n)*FIGURE_RADIUS*CURV_COEF:Math.sin(n)*FIGURE_RADIUS,-Math.cos(n)*FIGURE_RADIUS,0),new THREE.Vector3(1===e||4===e?Math.sin(n)*FIGURE_RADIUS*CURV_COEF:Math.sin(n)*FIGURE_RADIUS,-Math.cos(n)*FIGURE_RADIUS,FIGURE_HEIGHT)])}const n=(new THREE.BufferGeometry).setFromPoints(t[e]),a=new THREE.Line(n,materialLine);a.rotateX(-Math.PI),scene.add(a)}for(let e=0;e<10;e++){const t=2*e*Math.PI/5,n=new THREE.SphereGeometry(.3,32,16),a=new THREE.MeshBasicMaterial({color:SPHERE_COLORS[e],transparent:!0}),o=new THREE.Mesh(n,a);o.userData={"data-tab":"tab-"+(e+1),r:""+o.material.color.r,g:""+o.material.color.g,b:""+o.material.color.b},e<5?o.position.set(1===e||4===e?Math.sin(t)*FIGURE_RADIUS*-Math.PI*.315*CURV_COEF:Math.sin(t)*FIGURE_RADIUS*-Math.PI*.31,-Math.cos(t)*FIGURE_RADIUS*-Math.PI*.31,0):o.position.set(6===e||9===e?Math.sin(t)*FIGURE_RADIUS*-Math.PI*.315*CURV_COEF:Math.sin(t)*FIGURE_RADIUS*-Math.PI*.31,-Math.cos(t)*FIGURE_RADIUS*-Math.PI*.31,-FIGURE_HEIGHT),scene.add(o)}const animate=()=>{requestAnimationFrame(animate),renderer.render(scene,camera),TWEEN.update()};animate();const fadeIn=(e,t,n)=>{e.style.opacity=0,e.style.display=n||"block",e.style.transition=`opacity ${t}ms`,setTimeout(()=>{e.style.opacity=1},10)},fadeOut=(e,t)=>{e.style.opacity=1,e.style.transition=`opacity ${t}ms`,e.style.opacity=0,setTimeout(()=>{e.style.display="none"},t)},raycaster=new THREE.Raycaster,animationHoverHandler=e=>{const t=new THREE.Vector2((e.clientX-renderer.domElement.getBoundingClientRect().left)/renderer.domElement.clientWidth*2-1,-(e.clientY-renderer.domElement.getBoundingClientRect().top)/renderer.domElement.clientHeight*2+1),n=scene.children.filter(e=>e.isMesh);raycaster.setFromCamera(t,camera);const a=raycaster.intersectObjects(n,!0);if(a.length>0){n.forEach(e=>{new TWEEN.Tween(e.material).to({opacity:1},200).easing(TWEEN.Easing.Linear.None).onUpdate((function(){e.material.copy(e.material)})).start()});const e=a[0].object;new TWEEN.Tween(e.material).to({opacity:.5},200).easing(TWEEN.Easing.Linear.None).onUpdate((function(){e.material.copy(e.material)})).start()}},animationClickHandler=e=>{const t=new THREE.Vector2((e.clientX-renderer.domElement.getBoundingClientRect().left)/renderer.domElement.clientWidth*2-1,-(e.clientY-renderer.domElement.getBoundingClientRect().top)/renderer.domElement.clientHeight*2+1),n=scene.children.filter(e=>e.isMesh);raycaster.setFromCamera(t,camera);const a=raycaster.intersectObjects(n,!0);if(a.length>0){n.forEach(e=>{new TWEEN.Tween(e.scale).to({x:1,y:1,z:1},500).easing(TWEEN.Easing.Linear.None).onUpdate((function(){e.scale.copy(e.scale)})).start()});const e=a[0].object,t=document.querySelector(`.graphic__tab[data-tab="${e.userData["data-tab"]}"]`);new TWEEN.Tween(e.scale).to({x:2,y:2,z:2},500).easing(TWEEN.Easing.Linear.None).onUpdate((function(){e.scale.copy(e.scale)})).start(),document.querySelector(".anim-opacity").classList.remove("anim-opacity"),tabs.forEach(e=>{e.style.display="none"}),t.classList.add("anim-opacity"),r=300,(o=t).style.opacity=0,o.style.display=s||"block",o.style.transition=`opacity ${r}ms`,setTimeout(()=>{o.style.opacity=1},10);const i=document.querySelectorAll(".anim-opacity .desc__title-text, .anim-opacity .desc__text");i.forEach((e,t)=>{e.style.opacity="0",e.style.transform="translateY(5px)"}),setTimeout(()=>{i.forEach((e,t)=>{setTimeout(()=>{e.style.opacity="1",e.style.transform="translateY(0)"},300*t)})},200),w768.matches||document.querySelector(`.graphic__tab[data-tab="${e.userData["data-tab"]}"]`).scrollIntoView({behavior:"smooth"})}var o,r,s};renderer.domElement.addEventListener("mousedown",animationClickHandler),renderer.domElement.addEventListener("pointermove",animationHoverHandler);