import*as THREE from"./three.module.min.js";import{OrbitControls}from"./OrbitControls.js";const ANGLES_NUM=5,FIGURE_HEIGHT=3.5,FIGURE_RADIUS=3,LINES_COLOR="#ffffff",SPHERE_COLORS=["#4287f5","#42f598","#4f1aab","#db891d","#e81010","#e81078","#e5ff00","#231e29","#ac99c2","#49522f"],scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(70,window.innerWidth/window.innerHeight,1,1e3);camera.position.set(0,-9.5,2.7),camera.lookAt(scene.position);const raycaster=new THREE.Raycaster,renderer=new THREE.WebGLRenderer({antialias:!0});renderer.setSize(window.innerWidth,window.innerHeight),document.body.appendChild(renderer.domElement);const controls=new OrbitControls(camera,renderer.domElement),materialLine=new THREE.LineBasicMaterial({color:"#ffffff"}),polygonCoords1=[];for(let e=0;e<=5;e++){const t=2*e*Math.PI/5;polygonCoords1.push(new THREE.Vector3(3*Math.sin(t),3*-Math.cos(t),0))}const geometry1=(new THREE.BufferGeometry).setFromPoints(polygonCoords1),polygon1=new THREE.Line(geometry1,materialLine);polygon1.rotateX(-Math.PI),scene.add(polygon1);const polygonCoords2=[];for(let e=0;e<=5;e++){const t=2*e*Math.PI/5;polygonCoords2.push(new THREE.Vector3(3*Math.sin(t),3*-Math.cos(t),3.5))}const geometry2=(new THREE.BufferGeometry).setFromPoints(polygonCoords2),polygon2=new THREE.Line(geometry2,materialLine);polygon2.rotateX(-Math.PI),scene.add(polygon2);for(let e=0;e<5;e++){const t=[];for(let o=0;o<10;o++){const o=2*e*Math.PI/5;t.push([new THREE.Vector3(3*Math.sin(o),3*-Math.cos(o),0),new THREE.Vector3(3*Math.sin(o),3*-Math.cos(o),3.5)])}const o=(new THREE.BufferGeometry).setFromPoints(t[e]),n=new THREE.Line(o,materialLine);n.rotateX(-Math.PI),scene.add(n)}for(let e=0;e<10;e++){const t=2*e*Math.PI/5,o=new THREE.SphereGeometry(.2,32,16),n=new THREE.MeshBasicMaterial({color:SPHERE_COLORS[e]}),r=new THREE.Mesh(o,n);let s;r.addEventListener("click",t=>{console.log("click on "+e),t.target.material.color.set("#000000")}),raycaster.setFromCamera(r,camera);const a=raycaster.intersectObjects(scene.children,!1);a.length>0?s!==a[0].object&&(s&&s.material.emissive.setHex(s.currentHex),s=a[0].object,s.currentHex=s.material.emissive.getHex(),s.material.emissive.setHex(16711680)):(s&&s.material.emissive.setHex(s.currentHex),s=null),e<5?r.position.set(3*Math.sin(t)*-Math.PI*.31,3*-Math.cos(t)*-Math.PI*.31,0):r.position.set(3*Math.sin(t)*-Math.PI*.31,3*-Math.cos(t)*-Math.PI*.31,-3.5),scene.add(r)}function render(){requestAnimationFrame(render),renderer.render(scene,camera)}render();